{"id":"GcuI","dependencies":[{"name":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\package.json","includedInParent":true,"mtime":1660763550163},{"name":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\package.json","includedInParent":true,"mtime":1660763544831},{"name":"../Parser.js","loc":{"line":3,"column":23,"index":234},"parent":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\parsers\\YearParser.js","resolved":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\Parser.js"},{"name":"../utils.js","loc":{"line":4,"column":62,"index":312},"parent":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\parsers\\YearParser.js","resolved":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\utils.js"}],"generated":{"js":"var $GcuI$exports={};function $GcuI$var$_defineProperty(r,e,a){return e in r?Object.defineProperty(r,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[e]=a,r}$parcel$require(\"GcuI\",\"../Parser.js\"),$parcel$require(\"GcuI\",\"../utils.js\");class $GcuI$export$YearParser extends $GcuI$import$Parser{constructor(){super(...arguments),$GcuI$var$_defineProperty(this,\"priority\",130),$GcuI$var$_defineProperty(this,\"incompatibleTokens\",[\"Y\",\"R\",\"u\",\"w\",\"I\",\"i\",\"e\",\"c\",\"t\",\"T\"])}parse(r,e,a){var t=function(r){return{year:r,isTwoDigitYear:\"yy\"===e}};switch(e){case\"y\":return $GcuI$import$mapValue($GcuI$import$parseNDigits(4,r),t);case\"yo\":return $GcuI$import$mapValue(a.ordinalNumber(r,{unit:\"year\"}),t);default:return $GcuI$import$mapValue($GcuI$import$parseNDigits(e.length,r),t)}}validate(r,e){return e.isTwoDigitYear||e.year>0}set(r,e,a){var t=r.getUTCFullYear();if(a.isTwoDigitYear){var i=$GcuI$import$normalizeTwoDigitYear(a.year,t);return r.setUTCFullYear(i,0,1),r.setUTCHours(0,0,0,0),r}var u=\"era\"in e&&1!==e.era?1-a.year:a.year;return r.setUTCFullYear(u,0,1),r.setUTCHours(0,0,0,0),r}}$GcuI$exports.YearParser=$GcuI$export$YearParser;"},"sourceMaps":null,"error":null,"hash":"7e570b44db9486198088da6f681c8696","cacheData":{"env":{},"imports":{"$GcuI$import$Parser":["../Parser.js","Parser"],"$GcuI$import$mapValue":["../utils.js","mapValue"],"$GcuI$import$normalizeTwoDigitYear":["../utils.js","normalizeTwoDigitYear"],"$GcuI$import$parseNDigits":["../utils.js","parseNDigits"]},"exports":{"YearParser":"$GcuI$export$YearParser"},"wildcards":[],"sideEffects":false,"isES6Module":true,"shouldWrap":false}}