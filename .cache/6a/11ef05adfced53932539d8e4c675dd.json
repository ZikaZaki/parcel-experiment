{"id":"BGEP","dependencies":[{"name":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\package.json","includedInParent":true,"mtime":1660763550163},{"name":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\package.json","includedInParent":true,"mtime":1660763544831},{"name":"../Parser.js","loc":{"line":3,"column":23,"index":234},"parent":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\parsers\\ISOTimezoneWithZParser.js","resolved":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\Parser.js"},{"name":"../constants.js","loc":{"line":4,"column":33,"index":283},"parent":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\parsers\\ISOTimezoneWithZParser.js","resolved":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\constants.js"},{"name":"../utils.js","loc":{"line":5,"column":37,"index":339},"parent":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\parsers\\ISOTimezoneWithZParser.js","resolved":"C:\\Github\\Microverse\\Module 2\\Parcel-Experiment\\parcel-experiment\\node_modules\\date-fns\\esm\\parse\\_lib\\utils.js"}],"generated":{"js":"var $BGEP$exports={};function $BGEP$var$_defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}$parcel$require(\"BGEP\",\"../Parser.js\"),$parcel$require(\"BGEP\",\"../constants.js\"),$parcel$require(\"BGEP\",\"../utils.js\");class $BGEP$export$ISOTimezoneWithZParser extends $BGEP$import$Parser{constructor(){super(...arguments),$BGEP$var$_defineProperty(this,\"priority\",10),$BGEP$var$_defineProperty(this,\"incompatibleTokens\",[\"t\",\"T\",\"x\"])}parse(e,r){switch(r){case\"X\":return $BGEP$import$parseTimezonePattern($BGEP$import$timezonePatterns.basicOptionalMinutes,e);case\"XX\":return $BGEP$import$parseTimezonePattern($BGEP$import$timezonePatterns.basic,e);case\"XXXX\":return $BGEP$import$parseTimezonePattern($BGEP$import$timezonePatterns.basicOptionalSeconds,e);case\"XXXXX\":return $BGEP$import$parseTimezonePattern($BGEP$import$timezonePatterns.extendedOptionalSeconds,e);case\"XXX\":default:return $BGEP$import$parseTimezonePattern($BGEP$import$timezonePatterns.extended,e)}}set(e,r,t){return r.timestampIsSet?e:new Date(e.getTime()-t)}}$BGEP$exports.ISOTimezoneWithZParser=$BGEP$export$ISOTimezoneWithZParser;"},"sourceMaps":null,"error":null,"hash":"c0654b5112b7d7b496ba3cd5060b9c15","cacheData":{"env":{},"imports":{"$BGEP$import$Parser":["../Parser.js","Parser"],"$BGEP$import$timezonePatterns":["../constants.js","timezonePatterns"],"$BGEP$import$parseTimezonePattern":["../utils.js","parseTimezonePattern"]},"exports":{"ISOTimezoneWithZParser":"$BGEP$export$ISOTimezoneWithZParser"},"wildcards":[],"sideEffects":false,"isES6Module":true,"shouldWrap":false}}